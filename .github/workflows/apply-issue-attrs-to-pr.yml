name: Apply issue labels, assignees & project when opening PR
run-name: Applying attributes and to PR #${{ github.event.pull_request.number }} from branch ${{ github.event.pull_request.head.ref }}
on:
  pull_request:
    types: [opened]
jobs:
  label-pr:
    permissions:
      issues: read
      pull-requests: write
    runs-on: ubuntu-latest
    if: ${{ github.event.issue.pull_request }}
    steps:
      - uses: actions/github-script@v7
        id: apply-issue-attrs
        name: apply issue attrs to new pull request
        with:
          script: |
            const eventActionType = context.payload.action;
            const prBranchHead = context.payload.pull_request.head.ref;
            const prNumber = context.payload.pull_request.number;
            console.log(
              `PR #${prNumber} (${eventActionType}) branch:\n${prBranchHead})`,
            );

            // throw if prBranchHead is not type `string`
            if (typeof prBranchHead !== typeof " ") {
              const errorMsg = `'prBranchHead' type is not string. prBranchHead='${prBranchHead}' -- type='${typeof prBranchHead}'`;
              throw new Error(errorMsg);
            }

            // throw if branch has no hyphens:
            //   - issue number is prepended to branch name via hyphen
            if (!prBranchHead.includes("-")) {
              const errorMsg = `'prBranchHead' does not include hyphens: ${prBranchHead}`;
              throw new Error(errorMsg);
            }

            // get issue from branch name
            const branchIssueNumber = prBranchHead.split("-")[0];

            // throw if result is empty
            if (branchIssueNumber === "") throw new Error("'branchIssueNumber' === ''.");

            // throw if result is not number
            if (!(/^\d+$/.test(branchIssueNumber))) {
              const errorMsg = `'branchIssueNumber' is not a number: branchIssueNumber='${branchIssueNumber}'.`;
              throw new Error(errorMsg);
            }

            // get labels from issue
            const { data: issueLabels } = await github.rest.issues.listLabelsOnIssue({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: branchIssueNumber
            });

            // TESTING
            // get milestone from issue (if exists)
            // const { data: issueMilestone } = await github.rest.issues.listMilestoneOnIssue({
            //   owner: context.repo.owner,
            //   repo: context.repo.repo,
            //   issue_number: branchIssueNumber
            // });

            // check if `issueLabels` is not an array
            if (!Array.isArray(issueLabels)) {
              const errorMsg = `'issueLabels' is not an array: issueLabels=\n${JSON.stringify(issueLabels)}`;
              throw new Error(errorMsg);
            }

            // exit if `issueLabels` is an EMPTY array
            if (issueLabels.length === 0) {
              console.log("'issueLabels' array is empty.");
              return;
            }

            const issueLabelStrs = issueLabels.map(label => label.name);

            // add labels to pull request (PR is a type of issue)
            await github.rest.issues.addLabels({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              labels: issueLabelStrs
            });

            console.log("Successfully added issue labels to its linked pull request.");

            // PART 2: add assignees

            const issueRes = await github.rest.issues.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: branchIssueNumber,
            });
            const issue = issueRes.data;

            const assignees = issue.assignee ? [issue.assignee.login] : issue.assignees.map(a => a.login);
            console.log("\n\nMILESTONE\n", issue.milestone);
            console.log("\nLABELS (below)\n");
            issue.labels.forEach((i) => {
              console.log(`issue #${i.id} - "${i.name}"`);
            });
            console.log("\nLABELS (above)\n");

            // send request to add assignees
            await github.rest.issues.addAssignees({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: prNumber,
              assignees
            });
